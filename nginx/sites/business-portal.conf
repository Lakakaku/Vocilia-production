# Business Portal Load Balancing Configuration
# Enhanced configuration for business dashboard with location-aware routing

# Upstream configuration with health checks and load balancing
upstream business_dashboard_cluster {
    # Primary business dashboard instances
    server business-dashboard-1:3002 max_fails=3 fail_timeout=30s weight=3;
    server business-dashboard-2:3002 max_fails=3 fail_timeout=30s weight=3;
    server business-dashboard-3:3002 max_fails=3 fail_timeout=30s weight=2;
    
    # Backup instance (lower weight)
    server business-dashboard-backup:3002 backup;
    
    # Load balancing method: least connections for better distribution
    least_conn;
    
    # Keep-alive connections
    keepalive 32;
    keepalive_requests 1000;
    keepalive_timeout 60s;
}

# Separate upstream for API-heavy operations
upstream business_api_cluster {
    server api-gateway-1:3001 max_fails=2 fail_timeout=20s weight=4;
    server api-gateway-2:3001 max_fails=2 fail_timeout=20s weight=4;
    server api-gateway-3:3001 max_fails=2 fail_timeout=20s weight=3;
    
    # Backup API gateway
    server api-gateway-backup:3001 backup;
    
    # Use IP hash for session affinity on certain endpoints
    ip_hash;
    
    keepalive 64;
    keepalive_requests 2000;
    keepalive_timeout 60s;
}

# Location-specific upstream (for geo-distributed businesses)
upstream business_dashboard_stockholm {
    server business-dashboard-stockholm-1:3002 max_fails=3 fail_timeout=30s;
    server business-dashboard-stockholm-2:3002 max_fails=3 fail_timeout=30s;
    keepalive 16;
}

upstream business_dashboard_gothenburg {
    server business-dashboard-gothenburg-1:3002 max_fails=3 fail_timeout=30s;
    server business-dashboard-gothenburg-2:3002 max_fails=3 fail_timeout=30s;
    keepalive 16;
}

upstream business_dashboard_malmo {
    server business-dashboard-malmo-1:3002 max_fails=3 fail_timeout=30s;
    server business-dashboard-malmo-2:3002 max_fails=3 fail_timeout=30s;
    keepalive 16;
}

# Rate limiting zones for business users
limit_req_zone $binary_remote_addr zone=business_general:10m rate=30r/m;
limit_req_zone $binary_remote_addr zone=business_api:10m rate=60r/m;
limit_req_zone $binary_remote_addr zone=business_export:10m rate=5r/h;
limit_req_zone $binary_remote_addr zone=business_bulk:10m rate=10r/h;

# Caching configuration
proxy_cache_path /var/cache/nginx/business levels=1:2 keys_zone=business_cache:50m max_size=1g inactive=60m use_temp_path=off;

# GeoIP for location-based routing (requires ngx_http_geoip_module)
geo $business_region {
    default stockholm;
    
    # Stockholm region (approximate coordinates)
    59.0/8.0 stockholm;
    
    # Gothenburg region
    57.0/11.0 gothenburg;
    
    # Malm√∂ region
    55.0/13.0 malmo;
}

# Map business tier to cache settings
map $http_x_business_tier $cache_control {
    default "public, max-age=300";  # 5 minutes for Tier 1
    "2" "public, max-age=180";      # 3 minutes for Tier 2
    "3" "public, max-age=60";       # 1 minute for Tier 3 (real-time)
}

# Business Portal - Multi-region with intelligent routing
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name business.feedback.your-domain.com *.business.feedback.your-domain.com;

    # SSL configuration with OCSP stapling
    ssl_certificate /etc/nginx/ssl/business.crt;
    ssl_certificate_key /etc/nginx/ssl/business.key;
    ssl_trusted_certificate /etc/nginx/ssl/ca.crt;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:50m;
    ssl_session_timeout 1d;
    ssl_stapling on;
    ssl_stapling_verify on;
    
    # Security headers for business dashboard
    add_header Strict-Transport-Security "max-age=63072000" always;
    add_header X-Frame-Options SAMEORIGIN always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "camera=(), microphone=(), geolocation=(), payment=()" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' https: wss:;" always;
    
    # Business authentication check
    auth_request /auth-check;
    
    # Logging with business context
    access_log /var/log/nginx/business-access.log business_format;
    error_log /var/log/nginx/business-error.log warn;
    
    # Health check endpoint (no auth required)
    location = /api/health {
        access_log off;
        proxy_pass http://business_dashboard_cluster;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_connect_timeout 5s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;
    }
    
    # Authentication endpoint (internal)
    location = /auth-check {
        internal;
        proxy_pass http://business_api_cluster/api/auth/verify;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-URI $request_uri;
        proxy_set_header X-Original-Method $request_method;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Business API endpoints with enhanced routing
    location /api/ {
        # Rate limiting based on endpoint type
        location ~ ^/api/(export|bulk|batch) {
            limit_req zone=business_export burst=3 nodelay;
            limit_req zone=business_bulk burst=5 nodelay;
            proxy_pass http://business_api_cluster;
            proxy_read_timeout 600s;  # Extended timeout for exports
        }
        
        location ~ ^/api/(analytics|dashboard|reports) {
            limit_req zone=business_api burst=30 nodelay;
            
            # Cache analytics data based on business tier
            proxy_cache business_cache;
            proxy_cache_key "$scheme$request_method$host$request_uri$http_x_business_id";
            proxy_cache_valid 200 5m;
            proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504;
            proxy_cache_lock on;
            proxy_cache_lock_age 5s;
            proxy_cache_lock_timeout 10s;
            add_header X-Cache-Status $upstream_cache_status;
            add_header Cache-Control $cache_control;
            
            proxy_pass http://business_api_cluster;
        }
        
        # Default API routing
        limit_req zone=business_api burst=20 nodelay;
        proxy_pass http://business_api_cluster;
        
        # Enhanced proxy settings
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Business-Region $business_region;
        
        # Timeouts
        proxy_connect_timeout 10s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Buffer settings for large responses
        proxy_buffering on;
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
    }
    
    # WebSocket connections for real-time updates
    location /ws {
        proxy_pass http://business_api_cluster;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Business-Region $business_region;
        
        # Extended timeouts for WebSocket
        proxy_read_timeout 3600s;
        proxy_send_timeout 3600s;
        
        # No buffering for real-time data
        proxy_buffering off;
    }
    
    # Static assets with aggressive caching
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|webp|avif)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Content-Type-Options nosniff;
        add_header Access-Control-Allow-Origin "*";
        
        # Compress static files
        gzip_static on;
        brotli_static on;
        
        # Try local cache first, then upstream
        try_files $uri @business_static;
    }
    
    # Static assets fallback
    location @business_static {
        proxy_pass http://business_dashboard_cluster;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Host $host;
        
        # Cache static assets
        proxy_cache business_cache;
        proxy_cache_key "$scheme$request_method$host$request_uri";
        proxy_cache_valid 200 1h;
        proxy_cache_valid 404 5m;
        add_header X-Cache-Status $upstream_cache_status;
    }
    
    # Location-based routing for geo-distributed businesses
    location ~ ^/location/([^/]+)/ {
        set $location_region $1;
        
        # Route based on location
        if ($location_region = "stockholm") {
            proxy_pass http://business_dashboard_stockholm;
        }
        if ($location_region = "gothenburg") {
            proxy_pass http://business_dashboard_gothenburg;
        }
        if ($location_region = "malmo") {
            proxy_pass http://business_dashboard_malmo;
        }
        
        # Fallback to main cluster
        proxy_pass http://business_dashboard_cluster;
        
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Location-Region $location_region;
        proxy_cache_bypass $http_upgrade;
    }
    
    # Main business dashboard application
    location / {
        limit_req zone=business_general burst=10 nodelay;
        
        # Intelligent routing based on user's region
        set $upstream business_dashboard_cluster;
        
        if ($business_region = "stockholm") {
            set $upstream business_dashboard_stockholm;
        }
        if ($business_region = "gothenburg") {
            set $upstream business_dashboard_gothenburg;
        }
        if ($business_region = "malmo") {
            set $upstream business_dashboard_malmo;
        }
        
        proxy_pass http://$upstream;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Business-Region $business_region;
        proxy_cache_bypass $http_upgrade;
        
        # Fallback and error handling
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        proxy_next_upstream_tries 3;
        proxy_next_upstream_timeout 10s;
    }
    
    # Custom error pages
    error_page 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }
    
    error_page 403 /403.html;
    location = /403.html {
        root /usr/share/nginx/html;
        internal;
    }
}

# Business Portal Metrics and Status
server {
    listen 8080;
    server_name business-metrics.local;
    
    access_log off;
    
    # Nginx status
    location /nginx_status {
        stub_status;
        allow 127.0.0.1;
        allow 10.0.0.0/8;
        allow 192.168.0.0/16;
        deny all;
    }
    
    # Upstream status
    location /upstream_status {
        upstream_show;
        allow 127.0.0.1;
        allow 10.0.0.0/8;
        allow 192.168.0.0/16;
        deny all;
    }
}

# Custom log format for business analytics
log_format business_format '$remote_addr - $remote_user [$time_local] '
                          '"$request" $status $body_bytes_sent '
                          '"$http_referer" "$http_user_agent" '
                          '"$http_x_forwarded_for" "$http_x_business_id" '
                          '"$http_x_business_tier" "$business_region" '
                          'rt=$request_time uct="$upstream_connect_time" '
                          'uht="$upstream_header_time" urt="$upstream_response_time" '
                          'cache="$upstream_cache_status"';