# Nginx CDN Integration Configuration
# Optimized for business dashboard assets with CDN failover

# Define upstream CDN endpoints
upstream cloudflare_cdn {
    server assets.feedback.your-domain.com:443;
    server business-assets.feedback.your-domain.com:443;
    keepalive 32;
}

upstream aws_cloudfront {
    server d123456789.cloudfront.net:443;
    keepalive 16;
}

upstream local_assets {
    server business-dashboard:3002;
    keepalive 8;
}

# Asset optimization map
map $sent_http_content_type $expires {
    default                    epoch;
    text/html                  1h;
    text/css                   1y;
    application/javascript     1y;
    application/json           5m;
    ~image/                    1M;
    ~font/                     1y;
    ~video/                    1M;
}

# CDN status detection
map $upstream_addr $cdn_status {
    default "local";
    ~cloudflare "cdn";
    ~cloudfront "cdn";
}

# Compression optimization
map $http_accept_encoding $compression_suffix {
    default "";
    ~*gzip ".gz";
    ~*br ".br";
}

# Business dashboard CDN integration
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name business.feedback.your-domain.com;

    # SSL configuration
    ssl_certificate /etc/nginx/ssl/business.crt;
    ssl_certificate_key /etc/nginx/ssl/business.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    
    # Logging with CDN tracking
    access_log /var/log/nginx/business-cdn-access.log cdn_format;
    error_log /var/log/nginx/business-cdn-error.log;
    
    # Enable compression
    gzip on;
    gzip_vary on;
    gzip_comp_level 6;
    gzip_min_length 1000;
    gzip_types
        application/atom+xml
        application/geo+json
        application/javascript
        application/x-javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rdf+xml
        application/rss+xml
        application/xhtml+xml
        application/xml
        font/eot
        font/otf
        font/ttf
        image/svg+xml
        text/css
        text/javascript
        text/plain
        text/xml;
    
    # Brotli compression (if module available)
    brotli on;
    brotli_comp_level 6;
    brotli_types
        text/plain
        text/css
        application/json
        application/javascript
        text/xml
        application/xml
        application/xml+rss
        text/javascript;

    # Static assets with CDN failover
    location ~* ^/static/(.+\.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|webp|avif))$ {
        set $asset_path $1;
        set $asset_file $uri;
        
        # Set appropriate expires
        expires $expires;
        add_header Cache-Control "public, immutable";
        add_header X-Content-Type-Options nosniff;
        add_header X-Asset-Source "cdn-primary";
        
        # Try CDN first, then local fallback
        try_files @cdn_primary @cdn_secondary @local_asset;
        
        # Enable pre-compressed files
        gzip_static on;
        brotli_static on;
    }
    
    # Primary CDN (Cloudflare)
    location @cdn_primary {
        internal;
        proxy_pass https://business-assets.feedback.your-domain.com$asset_file;
        proxy_ssl_verify off;
        proxy_ssl_server_name on;
        proxy_set_header Host business-assets.feedback.your-domain.com;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header CF-IPCountry $geoip_country_code;
        
        # CDN timeout settings
        proxy_connect_timeout 5s;
        proxy_send_timeout 10s;
        proxy_read_timeout 30s;
        
        # Cache CDN responses locally
        proxy_cache business_asset_cache;
        proxy_cache_key "$scheme$request_method$host$request_uri";
        proxy_cache_valid 200 1h;
        proxy_cache_valid 404 5m;
        proxy_cache_use_stale error timeout invalid_header updating;
        add_header X-Cache-Status $upstream_cache_status;
        add_header X-Asset-Source "cdn-cloudflare";
        
        # Failover on CDN errors
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        proxy_next_upstream_tries 2;
        proxy_next_upstream_timeout 10s;
    }
    
    # Secondary CDN (AWS CloudFront)
    location @cdn_secondary {
        internal;
        proxy_pass https://d123456789.cloudfront.net$asset_file;
        proxy_ssl_verify off;
        proxy_ssl_server_name on;
        proxy_set_header Host d123456789.cloudfront.net;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_connect_timeout 5s;
        proxy_send_timeout 10s;
        proxy_read_timeout 30s;
        
        proxy_cache business_asset_cache;
        proxy_cache_key "$scheme$request_method$host$request_uri";
        proxy_cache_valid 200 30m;
        proxy_cache_valid 404 2m;
        add_header X-Cache-Status $upstream_cache_status;
        add_header X-Asset-Source "cdn-cloudfront";
        
        proxy_next_upstream error timeout;
        proxy_next_upstream_tries 1;
    }
    
    # Local asset fallback
    location @local_asset {
        internal;
        proxy_pass http://local_assets$asset_file;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Local caching
        expires 1h;
        add_header Cache-Control "public, max-age=3600";
        add_header X-Asset-Source "local-fallback";
        
        # Log fallback usage for monitoring
        access_log /var/log/nginx/cdn-fallback.log;
    }
    
    # API responses with selective CDN caching
    location ~* ^/api/(dashboard|analytics|reports)/(.+)$ {
        set $api_endpoint $1;
        set $api_path $2;
        
        # Business tier based caching
        set $cache_duration 300;  # 5 minutes default
        if ($http_x_business_tier = "2") {
            set $cache_duration 180;  # 3 minutes for tier 2
        }
        if ($http_x_business_tier = "3") {
            set $cache_duration 60;   # 1 minute for tier 3
        }
        
        # Cache at edge for appropriate endpoints
        location ~* ^/api/(dashboard/summary|analytics/overview) {
            proxy_pass http://business_api_cluster;
            
            # Edge caching
            proxy_cache business_api_cache;
            proxy_cache_key "$scheme$request_method$host$request_uri$http_x_business_id";
            proxy_cache_valid 200 $cache_duration;
            proxy_cache_use_stale error timeout updating;
            proxy_cache_bypass $cookie_nocache $arg_nocache;
            
            # Headers for CDN
            add_header X-Cache-Status $upstream_cache_status;
            add_header Cache-Control "public, max-age=$cache_duration, stale-while-revalidate=300";
            add_header Vary "X-Business-ID, X-Business-Tier";
        }
        
        # Non-cacheable API endpoints
        proxy_pass http://business_api_cluster;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Service Worker with CDN optimization
    location = /sw.js {
        expires 1h;
        add_header Cache-Control "public, max-age=3600, must-revalidate";
        add_header Service-Worker-Allowed "/";
        
        # Try CDN first
        try_files @cdn_sw @local_sw;
    }
    
    location @cdn_sw {
        internal;
        proxy_pass https://business-assets.feedback.your-domain.com/sw.js;
        proxy_ssl_verify off;
        proxy_set_header Host business-assets.feedback.your-domain.com;
        add_header X-Asset-Source "cdn-sw";
    }
    
    location @local_sw {
        internal;
        proxy_pass http://local_assets/sw.js;
        add_header X-Asset-Source "local-sw";
    }
    
    # Manifest and PWA files
    location ~* ^/(manifest\.json|site\.webmanifest|browserconfig\.xml)$ {
        expires 1d;
        add_header Cache-Control "public, max-age=86400";
        
        try_files @cdn_pwa @local_pwa;
    }
    
    location @cdn_pwa {
        internal;
        proxy_pass https://business-assets.feedback.your-domain.com$uri;
        proxy_ssl_verify off;
        proxy_set_header Host business-assets.feedback.your-domain.com;
        add_header X-Asset-Source "cdn-pwa";
    }
    
    location @local_pwa {
        internal;
        proxy_pass http://local_assets$uri;
        add_header X-Asset-Source "local-pwa";
    }
    
    # Dynamic content with edge-side includes (ESI)
    location /dashboard {
        proxy_pass http://business_dashboard_cluster;
        
        # Enable ESI processing
        ssi on;
        ssi_silent_errors on;
        
        # Fragment caching
        proxy_cache business_fragment_cache;
        proxy_cache_key "$scheme$request_method$host$request_uri$http_x_business_id";
        proxy_cache_valid 200 300;  # 5 minutes
        proxy_cache_bypass $cookie_nocache $arg_nocache $http_x_no_cache;
        
        add_header X-Fragment-Cache $upstream_cache_status;
    }
    
    # WebP/AVIF image optimization
    location ~* \.(png|jpg|jpeg)$ {
        set $webp_suffix "";
        set $avif_suffix "";
        
        if ($http_accept ~* "image/webp") {
            set $webp_suffix ".webp";
        }
        if ($http_accept ~* "image/avif") {
            set $avif_suffix ".avif";
        }
        
        # Try modern formats first, then original
        try_files 
            $uri$avif_suffix 
            $uri$webp_suffix 
            @cdn_image 
            @local_image;
        
        expires 1M;
        add_header Cache-Control "public, max-age=2592000, immutable";
        add_header Vary "Accept";
    }
    
    location @cdn_image {
        internal;
        proxy_pass https://business-assets.feedback.your-domain.com$uri;
        proxy_ssl_verify off;
        proxy_set_header Host business-assets.feedback.your-domain.com;
        proxy_set_header Accept $http_accept;
        add_header X-Asset-Source "cdn-image";
    }
    
    location @local_image {
        internal;
        proxy_pass http://local_assets$uri;
        add_header X-Asset-Source "local-image";
    }
    
    # Default location for main app
    location / {
        proxy_pass http://business_dashboard_cluster;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Fragment caching for personalized content
        proxy_cache business_page_cache;
        proxy_cache_key "$scheme$request_method$host$request_uri$http_x_business_tier";
        proxy_cache_valid 200 120;  # 2 minutes
        proxy_cache_bypass $cookie_session_token $http_x_no_cache;
        
        add_header X-Page-Cache $upstream_cache_status;
    }
}

# CDN cache configuration
proxy_cache_path /var/cache/nginx/business_assets levels=1:2 keys_zone=business_asset_cache:100m max_size=2g inactive=7d use_temp_path=off;
proxy_cache_path /var/cache/nginx/business_api levels=1:2 keys_zone=business_api_cache:50m max_size=500m inactive=1h use_temp_path=off;
proxy_cache_path /var/cache/nginx/business_fragments levels=1:2 keys_zone=business_fragment_cache:50m max_size=500m inactive=30m use_temp_path=off;
proxy_cache_path /var/cache/nginx/business_pages levels=1:2 keys_zone=business_page_cache:100m max_size=1g inactive=10m use_temp_path=off;

# CDN monitoring and health check
server {
    listen 8081;
    server_name cdn-health.local;
    
    access_log off;
    
    # CDN health check
    location /cdn-health {
        content_by_lua_block {
            local http = require "resty.http"
            local httpc = http.new()
            
            -- Check primary CDN
            local res, err = httpc:request_uri("https://business-assets.feedback.your-domain.com/health.txt", {
                method = "GET",
                ssl_verify = false,
                timeout = 5000
            })
            
            if res and res.status == 200 then
                ngx.say("CDN Primary: OK")
            else
                ngx.say("CDN Primary: FAIL")
            end
            
            httpc:close()
        }
        
        allow 127.0.0.1;
        allow 10.0.0.0/8;
        deny all;
    }
}

# Custom log format for CDN tracking
log_format cdn_format '$remote_addr - $remote_user [$time_local] '
                      '"$request" $status $body_bytes_sent '
                      '"$http_referer" "$http_user_agent" '
                      '"$http_x_forwarded_for" "$http_x_business_id" '
                      'cdn="$cdn_status" cache="$upstream_cache_status" '
                      'rt=$request_time uct="$upstream_connect_time" '
                      'uht="$upstream_header_time" urt="$upstream_response_time"';